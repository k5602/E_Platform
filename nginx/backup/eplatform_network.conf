# E_Platform Network Nginx Server Configuration
# This configuration serves as a reverse proxy for the Django and Daphne servers
# with enhanced security, performance optimizations, and detailed comments

# HTTP Server Block
server {
    # Basic server configuration
    listen 80;                          # Listen on port 80 for HTTP
    server_name 192.168.1.104;          # Using your local IP address
    
    # Access and error logs
    access_log /var/log/nginx/eplatform_access.log;
    error_log /var/log/nginx/eplatform_error.log warn;
    
    # Maximum upload size
    client_max_body_size 20M;
    
    # Security headers for HTTP
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Static files - served directly by Nginx for better performance
    location /static/ {
        alias /mnt/4BC9EBFC28ECC8F5/Others/Projects/E_Platform/staticfiles/;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
        access_log off;
        
        # Protect against directory listing
        autoindex off;
        
        # Optimize file serving
        sendfile on;
        tcp_nopush on;
        
        # Disable processing of .htaccess files
        location ~ /\.ht {
            deny all;
        }
    }
    
    # Media files - served directly by Nginx
    location /media/ {
        alias /mnt/4BC9EBFC28ECC8F5/Others/Projects/E_Platform/media/;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
        access_log off;
        
        # Protect against directory listing
        autoindex off;
        
        # Optimize file serving
        sendfile on;
        tcp_nopush on;
        
        # Disable processing of .htaccess files
        location ~ /\.ht {
            deny all;
        }
    }
    
    # WebSocket connections - route to Daphne
    location /ws/ {
        proxy_pass http://127.0.0.1:8001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400;  # Timeout for WebSocket connections (24h)
        
        # WebSocket specific optimizations
        proxy_buffers 8 32k;
        proxy_buffer_size 64k;
        proxy_connect_timeout 90s;
        proxy_send_timeout 90s;
    }
    
    # API endpoints - route to Django with specific optimizations
    location /api/ {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API specific optimizations
        proxy_buffers 8 32k;
        proxy_buffer_size 64k;
        proxy_read_timeout 90s;
        
        # Rate limiting for API
        limit_req zone=api burst=20 nodelay;
        
        # CORS headers for API
        add_header Access-Control-Allow-Origin $http_origin;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With";
        add_header Access-Control-Allow-Credentials "true";
        
        # Handle OPTIONS requests for CORS preflight
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin $http_origin;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With";
            add_header Access-Control-Allow-Credentials "true";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }
    
    # Admin area - route to Django with specific security
    location /admin/ {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Additional security for admin
        client_max_body_size 10M;
        proxy_read_timeout 90s;
        
        # Basic rate limiting for admin login
        limit_req zone=admin burst=5 nodelay;
    }
    
    # All other requests - route to Django
    location / {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 60s;
    }
    
    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    # Health check endpoint
    location /health/ {
        access_log off;
        return 200 "OK";
    }
    
    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}
